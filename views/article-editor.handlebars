<script type="text/javascript" src="./tinymce/tinymce.min.js"></script>

<script type="text/javascript">
    tinymce.init({
    selector: '#article',
    width: 700,
    plugins: 'image',
    toolbar: 'image',
    images_file_types: 'jpg,svg,webp,png',
    file_picker_types: 'image',
    block_unsupported_drop: true,

    file_picker_callback: (callback, value, meta) => {

    const input = document.createElement('input');
    input.setAttribute('type', 'file');
    input.setAttribute('accept', 'image/*');

    input.addEventListener('change', (e) => {
    const file = e.target.files[0];

    const reader = new FileReader();
    reader.addEventListener('load', () => {
        /*
          Note: Now we need to register the blob in TinyMCEs image blob
          registry. In the next release this part hopefully won't be
          necessary, as we are looking to handle it internally.
        */
        const id = 'blobid' + (new Date()).getTime();
        const blobCache =  tinymce.activeEditor.editorUpload.blobCache;
        const base64 = reader.result.split(',')[1];
        const blobInfo = blobCache.create(id, file, base64);
        blobCache.add(blobInfo);

        /* call the callback and populate the Title field with the file name */
        callback(blobInfo.blobUri(), { title: file.name });
      });
      reader.readAsDataURL(file);
    });

    input.click();
  }
});

</script>

<h1>New Article</h1>
<form method="post">
    <label for "title"><h2>Title:</h2></label>
    <input type="text" id="title" name="title"><br>
    <textarea id="article">Your Article Here</textarea>
</form>